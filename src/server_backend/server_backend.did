type CreatePostRequest = record {
  club_ids : opt vec text;
  nfts : vec NftToken;
  created_by : text;
  created_ts : nat64;
  words : text;
  in_public : bool;
};
type CreatePostResponse = record { post : Post; error : opt ServerError };
type DeletePostRequest = record { id : text };
type DeletePostResponse = record { error : opt ServerError };
type GetPostByIdResponse = record { post : opt Post };
type GetPostByUserRequest = record { pid : text };
type GetPostByUserResponse = record { post : vec Post };
type GetPostsRequest = record {
  offset : nat32;
  limit : opt int32;
  from_club_id : opt text;
};
type GetPostsResponse = record { offset : int32; posts : vec Post };
type NftToken = record {
  token_index : nat16;
  token_id : text;
  canister_id : text;
};
type Post = record {
  id : text;
  club_ids : opt vec text;
  emoji_reactions : opt vec record { text; nat32 };
  nfts : vec NftToken;
  created_by : text;
  created_ts : nat64;
  replies : opt vec text;
  words : text;
  in_public : bool;
};
type ServerError = variant {
  CreatePostGeneralError : text;
  RemovePostError : text;
};
service : {
  create_post : (CreatePostRequest) -> (CreatePostResponse);
  delete_all_post : () -> ();
  delete_post : (DeletePostRequest) -> (DeletePostResponse);
  get_post_by_id : (DeletePostRequest) -> (GetPostByIdResponse) query;
  get_posts : (GetPostsRequest) -> (GetPostsResponse) query;
  get_posts_by_user : (GetPostByUserRequest) -> (GetPostByUserResponse) query;
}